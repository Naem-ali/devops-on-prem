server:
  ha:
    enabled: true
    replicas: 3
    raft:
      enabled: true
      setNodeId: true

  ingress:
    enabled: true
    hosts:
    - host: vault.local
      paths: [ "/" ]
    annotations:
      kubernetes.io/ingress.class: traefik
      cert-manager.io/cluster-issuer: "internal-ca-issuer"

  dataStorage:
    size: 10Gi
    storageClass: local-path

  auditStorage:
    enabled: true
    size: 10Gi
    storageClass: local-path
    accessMode: ReadWriteOnce

  telemetry:
    enabled: true
    prometheus:
      enabled: true

  extraEnvironmentVars:
    VAULT_ADDR: "http://127.0.0.1:8200"
    VAULT_API_ADDR: "http://$(POD_IP):8200"

  extraArgs: |
    -config=/vault/config/extraconfig.hcl

  extraVolumes:
  - type: configMap
    name: vault-extraconfig
  - type: configMap
    name: vault-audit-config
  - type: emptyDir
    name: audit-logs
    mountPath: /vault/audit

  extraContainers:
  - name: audit-sidecar
    image: busybox:1.34
    command: [ "/bin/sh", "-c" ]
    args:
    - |
      tail -F /vault/audit/vault-audit.log | \
      while read line; do
        echo "$line" | tee >(logger -t vault-audit)
      done
    volumeMounts:
    - name: audit-logs
      mountPath: /vault/audit
      readOnly: true

  postStart:
  - /bin/sh
  - -c
  - |
    vault audit enable file file_path=/vault/audit/vault-audit.log
    vault audit enable syslog tag="vault-audit" facility="AUTH"

  extraConfigMap:
    data:
      extraconfig.hcl: |
        telemetry {
          prometheus_retention_time = "24h"
          disable_hostname = true
        }

        storage "raft" {
          path = "/vault/data"
          retry_join {
            auto_join = "provider=k8s namespace=vault label_selector=app.kubernetes.io/name=vault"
          }
          snapshot_interval = "1h"
          snapshot_threshold = 50
        }

ui:
  enabled: true
  serviceType: ClusterIP

injector:
  enabled: true

  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
